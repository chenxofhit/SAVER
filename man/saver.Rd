% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/saver.R, R/saver_temp.R
\name{saver}
\alias{saver}
\alias{saver}
\title{Runs SAVER}
\usage{
saver(x, size.factor = NULL, npred = NULL, pred.cells = NULL,
  pred.genes = NULL, pred.genes.only = FALSE, null.model = FALSE,
  verbose = FALSE, predict.time = TRUE)

saver(x, size.factor = NULL, npred = NULL, pred.cells = NULL,
  pred.genes = NULL, pred.genes.only = FALSE, null.model = FALSE,
  verbose = FALSE, predict.time = TRUE)
}
\arguments{
\item{x}{An expression count matrix. The rows correspond to genes and
the columns correspond to cells.}

\item{size.factor}{Vector of cell size normalization factors.
If \code{x} is already normalized or normalization is not desired, use
\code{size.factor = 1}. Default uses mean library size normalization.}

\item{npred}{Number of genes for regression prediction. Selects the top
\code{npred} genes in terms of mean expression for regression prediction.
Default is all genes.}

\item{pred.cells}{Indices of cells to perform regression prediction.
Default is all cells.}

\item{pred.genes}{Indices of specific genes to perform regression
prediction. Overrides \code{npred}. Default is all genes.}

\item{pred.genes.only}{Return expression levels of only \code{pred.genes}.
Default is FALSE (returns expression levels of all genes).}

\item{null.model}{Whether to use mean gene expression as prediction.}

\item{verbose}{If TRUE, prints index of gene}

\item{predict.time}{If TRUE, calculates approximate finish time.}

\item{parallel}{If \code{TRUE}, uses the parallel backend \code{foreach} to
parallelize prediction. Must register parallel backend beforehand
(\code{doParallel}, \code{doMC}). See example below.}

\item{nzero}{Run prediction for genes that have at least this many
nonzero cells. Default is 10.}

\item{dfmax}{Maximum number of genes used in prediction model. Default is
300.}

\item{nfolds}{Number of folds to be used in cross validation. Default is 5.}

\item{nlambda}{Number of lambda to calculate in cross validation. Default is
5.}

\item{remove.zero.genes}{Whether to remove genes with all zero.
Default is FALSE.}

\item{x}{An expression count matrix. The rows correspond to genes and
the columns correspond to cells.}

\item{size.factor}{Vector of cell size normalization factors.
If \code{x} is already normalized or normalization is not desired, use
\code{size.factor = 1}. Default uses mean library size normalization.}

\item{parallel}{If \code{TRUE}, uses the parallel backend \code{foreach} to
parallelize prediction. Must register parallel backend beforehand
(\code{doParallel}, \code{doMC}). See example below.}

\item{nzero}{Run prediction for genes that have at least this many
nonzero cells. Default is 10.}

\item{npred}{Number of genes for regression prediction. Selects the top
\code{npred} genes in terms of mean expression for regression prediction.
Default is all genes.}

\item{pred.cells}{Indices of cells to perform regression prediction.
Default is all cells.}

\item{pred.genes}{Indices of specific genes to perform regression
prediction. Overrides \code{npred}. Default is all genes.}

\item{pred.genes.only}{Return expression levels of only \code{pred.genes}.
Default is FALSE (returns expression levels of all genes).}

\item{null.model}{Whether to use mean gene expression as prediction.}

\item{dfmax}{Maximum number of genes used in prediction model. Default is
300.}

\item{nfolds}{Number of folds to be used in cross validation. Default is 5.}

\item{nlambda}{Number of lambda to calculate in cross validation. Default is
5.}

\item{verbose}{If TRUE, prints index of gene}

\item{predict.time}{If TRUE, calculates approximate finish time.}
}
\value{
A list with the following components
\item{\code{estimate}}{Recovered (normalized) expression}
\item{\code{alpha}}{Posterior Gamma shape parameter}
\item{\code{beta}}{Posterior Gamma rate parameter}
\item{\code{info}}{Information about dataset}

A list with the following components
\item{\code{estimate}}{Recovered (normalized) expression}
\item{\code{alpha}}{Posterior Gamma shape parameter}
\item{\code{beta}}{Posterior Gamma rate parameter}
\item{\code{info}}{Information about dataset}
}
\description{
Recovers expression using the SAVER method.

Recovers expression using the SAVER method.
}
\details{
The SAVER method starts by estimating the prior mean and variance for the
true expression level for each gene and cell. The prior mean is obtained
through predictions from a LASSO Poisson regression for each gene
implemented using the \code{glmnet} package. Then, the variance is estimated
through maximum likelihood assuming constant variance, Fano factor, or
coefficient of variation variance structure for each gene. The posterior
distribution is calculated and the posterior mean is reported as the SAVER
estimate.

The SAVER method starts by estimating the prior mean and variance for the
true expression level for each gene and cell. The prior mean is obtained
through predictions from a Lasso Poisson regression for each gene
implemented using the \code{glmnet} package. Then, the variance is estimated
through maximum likelihood assuming constant variance, Fano factor, or
coefficient of variation variance structure for each gene. The posterior
distribution is calculated and the posterior mean is reported as the SAVER
estimate.
}
\examples{
data("linnarsson")

# predictions for top 5 highly expressed genes
saver1 <- saver(linnarsson, npred = 5)

# predictions for certain genes
genes <- c("Thy1", "Mbp", "Stim2", "Psmc6", "Rps19")
genes.ind <- which(rownames(linnarsson) \%in\% genes)
saver2 <- saver(linnarsson, pred.genes = genes.ind)

# return only certain genes
saver3 <- saver(linnarsson, pred.genes = genes.ind, pred.genes.only = TRUE)

# Parallel
\dontrun{
require(doParallel)
registerDoParallel(cores = 2)
system.time(saver(linnarsson, npred = 20))
system.time(saver(linnarsson, npred = 20, parallel = TRUE))
}

data("linnarsson")

# predictions for top 5 highly expressed genes
saver1 <- saver(linnarsson, npred = 5)

# predictions for certain genes
genes <- c("Thy1", "Mbp", "Stim2", "Psmc6", "Rps19")
genes.ind <- which(rownames(linnarsson) \%in\% genes)
saver2 <- saver(linnarsson, pred.genes = genes.ind)

# return only certain genes
saver3 <- saver(linnarsson, pred.genes = genes.ind, pred.genes.only = TRUE)

# Parallel
\dontrun{
require(doParallel)
registerDoParallel(cores = 2)
system.time(saver(linnarsson, npred = 20))
system.time(saver(linnarsson, npred = 20, parallel = TRUE))
}

}
